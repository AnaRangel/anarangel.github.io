---
import { LanguageToggle } from '@components';
import { getLocalePath, t } from 'i18n:astro';
import Logo from './Logo.astro';

const SLUGS = [
  {
    slug: getLocalePath('/'),
  },
  {
    slug: Astro.url.pathname.includes('/en')
      ? getLocalePath('/#projects')
      : getLocalePath('/#proyectos'),
  },
  {
    slug: getLocalePath('/sobre-mi'),
  },
];

const LINKS = t('navbar', {
  returnObjects: true,
});
---

<header class="nav-container">
  <a href={getLocalePath('/')}>
    <Logo />
  </a>

  <!-- Navigation Section -->
  <nav class="navbar" data-status="close" aria-hidden="true">
    <ul class="list">
      {
        SLUGS.map(({ slug }, index) => (
          <>
            <li class:list={['list-item', { active: Astro.url.pathname === slug }]}>
              <a href={slug}>{LINKS[index]}</a>
            </li>
            <li class="dots">&#183;</li>
          </>
        ))
      }
      <li class="toggle-container">
        <LanguageToggle />
      </li>
    </ul>
  </nav>

  <div class="burger" data-status="close">
    <span class="bars bar-top"></span>
    <span class="bars bar-middle"></span>
    <span class="bars bar-bottom"></span>
  </div>
</header>

<!----------- Style to the navbar comp ----------->
<style lang="scss">
  :root {
    --color-bg: hsla(0deg 0% 0% 0.5);
    --color-menu: hsla(0deg 0 100%);
    --color-menu-open: hsla(0deg 0% 0% / 80%);
  }

  .nav-container {
    position: relative;
    z-index: 10;

    display: flex;

    justify-content: space-between;
    inline-size: auto;
    padding-inline: 1.5rem;
    padding-block: 2rem;

    transition: transform 0.3s ease-in-out;
  }

  .navbar {
    position: absolute;

    z-index: 1;

    display: flex;
    justify-content: flex-end;

    background-color: hsla(0deg 0 3% / 80%);
    transform: translateY(-300%);
    opacity: 1;

    transition:
      transform 300ms ease-in-out,
      opacity 300ms ease-in-out;
    inset: 0;
    inline-size: 100%;
    block-size: 100svh;
    padding-block-start: 7rem;

    &[data-status='open'] {
      background-color: var(--color-menu-open);
      transform: translateY(0);
      opacity: 100;
      backdrop-filter: blur(0.1rem);
    }
  }

  .list {
    align-items: center;
    display: flex;
    flex-direction: column;
    margin-inline: auto;
    gap: 1.5rem;

    font-size: 1.7rem;
    line-height: 2.5rem;
    color: white;
  }

  .dots {
    display: none;
  }

  .toggle-container {
    width: 65vw;
    max-width: 638px;
    @media (width >= 800px) {
      width: 106.4px;
    }
  }

  .burger {
    position: relative;
    inset-block-start: 0.3rem;

    z-index: 2;

    inline-size: 2rem;
    block-size: 2.8125rem;

    transform: rotate(0deg);
    cursor: pointer;

    transition:
      transform 0.25s ease-in-out,
      opacity 0.25s ease-in-out,
      inset 0.25s ease-in-out;
  }

  .bars {
    position: absolute;
    inset-inline-start: 0;

    display: block;
    inline-size: 100%;
    block-size: 0.3rem;

    border-radius: 0.5625rem;

    background: white;
    transform: rotate(0deg);
    opacity: 1;

    transition:
      transform 0.25s ease-in-out,
      opacity 0.25s ease-in-out,
      inset 0.25s ease-in-out;
  }

  .bar-middle {
    inset-block-start: 0.65rem;
  }

  .bar-bottom {
    inset-block-start: 1.25rem;
  }

  .burger[data-status='open'] {
    .bar-top {
      inset-block-start: 1.125rem;

      transform: rotate(135deg);
    }

    .bar-middle {
      inset-inline-start: -3.75rem;

      opacity: 0;
    }

    .bar-bottom {
      inset-block-start: 1.125rem;

      transform: rotate(-135deg);
    }
  }

  @media (width >= 50rem) {
    span,
    .burger {
      display: none;
    }
  }

  @media (width >= 50rem) {
    .nav-container {
      position: fixed;

      display: flex;
      gap: 1.5rem;
      padding: 0.7rem 1.5rem;

      align-items: center;
      border: 0.2px solid hsla(234deg 15% 37% / 100%);

      border-radius: 2rem;

      background-color: rgba(10, 10, 10, 0.7);
      backdrop-filter: blur(10px);
      inset-block-start: 1.2rem;
      inset-inline: 0;

      inline-size: fit-content;
      margin-inline: auto;
    }
  }

  @media (width >= 50rem) {
    .navbar {
      display: contents;
      border-radius: 0.5rem;

      background-color: var(--color-bg);
      padding: 0.75rem 1.5rem;
      transform: translateY(0);
      inset-inline-start: 28rem;
      inset: 0;
      padding-block-start: 1.6rem;
    }

    .list {
      display: flex;
      flex-direction: row;
      align-items: center;

      block-size: 2rem;

      list-style: none;
    }

    .list-item:has(a:hover),
    .list-item:has(a:active),
    .list-item.active {
      background: radial-gradient(
        50% 50% at 50% 50%,
        rgba(255, 255, 255, 0.24) 0%,
        rgba(153, 153, 153, 0) 100%
      );
      color: white;
    }

    .list-item {
      padding-inline: 0.5rem;
      font-size: 1.2rem;
      text-decoration: none;
      font-size: 1rem;
      color: #b1b3d0;
    }

    .dots {
      display: flex;

      font-size: 2.5rem;
      color: #b1b3d0;
    }

    .burger {
      display: none;
    }
  }
</style>

{/*----------- function to the navbar comp -----------*/}
<script is:inline>
  const items = document.querySelectorAll('.list-item  a');
  const navBar = document.querySelector('.navbar');
  const burgerMenu = document.querySelector('.burger');
  const dataStatus = 'data-status';

  items.forEach((anchor) => {
    anchor.addEventListener('click', () => {
      navBar.setAttribute(dataStatus, 'open');
      burgerMenu.click();
    });
  });

  // Animation to the three spans, if get touch, will be a X
  burgerMenu.addEventListener('click', () => {
    const isOpen = navBar.getAttribute(dataStatus) === 'open';

    if (isOpen) {
      document.querySelector('body').style.removeProperty('overflow-y');
      navBar.setAttribute(dataStatus, 'close');
      burgerMenu.setAttribute(dataStatus, 'close');
    } else {
      document.querySelector('body').style.overflowY = 'hidden';
      navBar.setAttribute(dataStatus, 'open');
      burgerMenu.setAttribute(dataStatus, 'open');
    }
  });
</script>
