---
export enum GradientColor {
  blue = 'blue',
  purple = 'purple',
  darkPurple = 'darkPurple',
  darkBlue = 'darkBlue',
  cyan = 'cyan',
}

interface GradientBackgroundProps {
  color: GradientColor;
  class?: string;
}

const { color, class: className } = Astro.props as GradientBackgroundProps;

const gradients: Record<GradientColor, string> = {
  [GradientColor.blue]:
    'radial-gradient(48.42% 48.42% at 49.41% 51.58%, rgba(46, 88, 255, 0.34) 0%, rgba(0, 0, 0, 0.00) 100%)',
  [GradientColor.purple]:
    'radial-gradient(48.42% 48.42% at 49.41% 51.58%, rgba(148, 82, 255, 0.40) 0%, rgba(0, 0, 0, 0.00) 100%)',
  [GradientColor.darkPurple]:
    'radial-gradient(48.42% 48.42% at 49.41% 51.58%, #1E0D4F 0%, rgba(0, 0, 0, 0.00) 100%)',
  [GradientColor.darkBlue]:
    'radial-gradient(48.42% 48.42% at 49.41% 51.58%, #061962 0%, rgba(0, 0, 0, 0.00) 100%)',
  [GradientColor.cyan]:
    'radial-gradient(35.82% 35.18% at 50.01% 50%, rgba(48, 183, 202, 0.30) 0%, rgba(33, 212, 155, 0.00) 100%)',
};

const gradientStyle = gradients[color];
const Class = className ? ` ${className}` : '';
---

<div class={`gradient-background${Class}`} style={`--gradient: ${gradientStyle}`}>
  <slot />
</div>

<style>
  .gradient-background {
    position: absolute;
    top: -3%;
    left: 50%;
    max-height: 1064px;
    max-width: 1064px;
    height: 100%;
    width: 100%;
    background: var(--gradient);
    transform: translate(-50%, -50%);
  }

  @media (max-width: 480px) {
    .gradient-background {
      max-height: 514px;
      max-width: 514px;
      height: 100%;
      width: 100%;
    }
  }
</style>
